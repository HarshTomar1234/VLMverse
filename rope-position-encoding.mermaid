```mermaid
graph TD
    subgraph "Rotary Position Encoding (RoPE)"
        A[Query/Key vectors] --> C
        B[Position information] --> C
        C[Apply rotation matrix\nto each dimension pair] --> D[Position-encoded vectors]
    end
    
    subgraph "Mathematical Formulation"
        E["For position m and dimension pair (2j, 2j+1):"]
        
        F["Rotation Matrix R_θ(m):
        [cos(mθj)  -sin(mθj)]
        [sin(mθj)   cos(mθj)]
        where θj = 10000^(-2j/d)"]
        
        G["Applied to query/key vectors:
        q̂m,2j   = qm,2j·cos(mθj) - qm,2j+1·sin(mθj)
        q̂m,2j+1 = qm,2j·sin(mθj) + qm,2j+1·cos(mθj)"]
        
        H["Complex number representation:
        q̂m = Reℂ(e^(imθ) ⊙ q)
        where ⊙ is complex multiplication"]
        
        E --> F --> G --> H
    end
    
    subgraph "Key Properties"
        I["Relative position encoding:
        ⟨q̂m, k̂n⟩ = f(q, k, m-n)"]
        
        J["Enables extrapolation beyond
        training context length"]
        
        K["Decaying attention with
        frequency θj"]
    end
    
    style A fill:#f9f9f9,stroke:#333,stroke-width:1px
    style B fill:#f9f9f9,stroke:#333,stroke-width:1px
    style C fill:#e6f7ff,stroke:#333,stroke-width:1px
    style D fill:#f9f9f9,stroke:#333,stroke-width:1px
    style E fill:#f0f0f0,stroke:#333,stroke-width:1px
    style F fill:#f0f0f0,stroke:#333,stroke-width:1px
    style G fill:#f0f0f0,stroke:#333,stroke-width:1px
    style H fill:#f0f0f0,stroke:#333,stroke-width:1px
    style I fill:#e6ffe6,stroke:#333,stroke-width:1px
    style J fill:#e6ffe6,stroke:#333,stroke-width:1px
    style K fill:#e6ffe6,stroke:#333,stroke-width:1px
```
